spring.application.name=SandWich

# DB ??
#spring.datasource.url=jdbc:postgresql://localhost:5432/sandwich
#spring.datasource.username=postgres
#spring.datasource.password=postgres

# DB ?? - Docker ????
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/sandwich}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}

# JPA ??
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Redis
#spring.data.redis.host=localhost
#spring.data.redis.port=6379

# Redis - Docker ????
spring.data.redis.host=${SPRING_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_REDIS_PORT:6379}

# Log
logging.level.com.sandwich=DEBUG
logging.level.org.springframework.mail=DEBUG
debug=true

# OAuth2 GitHub client
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=read:user,user:email
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.github.client-name=GitHub

# GitHub server
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=login

# OAuth2 Google client
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

# AWS
#cloud.aws.credentials.access-key=${AWS_ACCESS_KEY}
#cloud.aws.credentials.secret-key=${AWS_SECRET_KEY}
cloud.aws.stack.auto=false

# S3
cloud.aws.region.static=ap-northeast-2

# bucket name
cloud.aws.s3.bucket=sandwich-s3-bucket-name

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB